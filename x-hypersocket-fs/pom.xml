<!-- Copyright (c) 2013 Hypersocket Limited. All rights reserved. This program 
	and the accompanying materials are made available under the terms of the 
	GNU Public License v3.0 which accompanies this distribution, and is available 
	at http://www.gnu.org/licenses/gpl.html -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>x-hypersocket-fs</artifactId>
	<name>Hypersocket - File Resources</name>

	<parent>
		<groupId>com.hypersocket</groupId>
		<artifactId>hypersocket-group</artifactId>
		<version>0.0.6-SNAPSHOT</version>
		<relativePath>../hypersocket-group</relativePath>
	</parent>

	<dependencies>
		<dependency>
			<groupId>com.hypersocket</groupId>
			<artifactId>hypersocket-jquery</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>jcifs</groupId>
			<artifactId>jcifs</artifactId>
			<version>1.3.17</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-vfs2-sandbox</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.3</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.jackrabbit</groupId>
			<artifactId>jackrabbit-webdav</artifactId>
			<version>2.7.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeScope>provided</excludeScope>
							<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>install</phase>
						<configuration>
							<target>
								<echo message="Deleting common jar files from ${project.build.directory}/target/extension-def and ${basedir}/../server-core/target/dependencies"/>
								<delete>
									<fileset dir="${project.build.directory}/dependencies" includes="*.jar">
										<present present="both" targetdir="${basedir}/../server-core/target/dependencies" >
											<mapper type="flatten"/>
										</present>
									</fileset>
									<!--  Delete any dependencies that are not in app-enterpise; this is how we remove 
									     dependencies that were mediated to a different version. -->
									<fileset dir="${project.build.directory}/dependencies" includes="*.jar">
										<present present="srconly" targetdir="${basedir}/../app-enterprise/target/lib" >
											<mapper type="flatten"/>
										</present>
									</fileset>
								</delete>
								<property name="extension.def" value="${project.build.directory}/extension-def/${project.artifactId}"/>
								<mkdir dir="${extension.def}"/>
								<zip
									destfile="${extension.def}/${project.artifactId}-${project.version}.zip">
									<zipfileset dir="${project.build.directory}/dependencies"
										prefix="${project.artifactId}" />
									<zipfileset
										dir="${project.build.directory}"
										prefix="${project.artifactId}">
										<include name="${project.artifactId}-${project.version}.jar"></include>	
									</zipfileset>
								</zip>
								<copy todir="${extension.def}">
									<fileset dir="${project.build.directory}/classes">
										<include name="**/*.properties" />
										<include name="**/*.def" />
									</fileset>
								</copy>
								<move file="${extension.def}/extension.def" tofile="${extension.def}/${project.artifactId}.def"/>
								<property file="${extension.def}/${project.artifactId}.def"/>
								<copy file="${project.build.directory}/classes/${extension.image}" tofile="${extension.def}/${extension.image}"/>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.8,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<repositories>
		<repository>
			<id>sshtools</id>
			<name>sshtools-releases</name>
			<url>http://artifactory.javassh.com/ext-releases-local</url>
		</repository>

	</repositories>
</project>
